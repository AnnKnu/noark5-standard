#!/usr/bin/python3

import glob
import json

import docutils.nodes
import docutils.parsers.rst
import docutils.utils
import docutils.frontend

class RstVisitor(docutils.nodes.NodeVisitor):
    req = []

    def visit_table(self, node: docutils.nodes.reference) -> None:
        """Called for "table" nodes."""
        self.entry = {}
        self.header = {}

    def visit_row(self, node: docutils.nodes.reference) -> None:
        """Called for "table row" nodes."""
        #print(node)
        if not self.header:
            col = 0
            while node.children:
                field = node.children.pop(0).astext()
                self.header[col] = field
                col += 1
            return

        if not 'Krav nr.' == self.header[0]:
            return
        col = 0
        while node.children:
            #print("C:", node.children)
            value = node.children.pop(0).astext()
            #print("Value:", value)
            value = str(value) \
                .replace('\n', 'xxx') \
                .replace('<bullet_list bullet="-">', '\n') \
                .replace('</bullet_list>', '\n') \
                .replace('<list_item><paragraph>', '- ') \
                .replace('</paragraph></list_item>', '\n') \
                .replace('<entry>', '') \
                .replace('</entry>', '') \
                .replace('</paragraph><paragraph>', '\n\n') \
                .replace('<paragraph>', '') \
                .replace('</paragraph>', '\n') \
                .replace('xxx', ' ')
            value = value \
                .replace('<strong>', '**') \
                .replace('</strong>', '**') \
                .replace('<emphasis>', '*') \
                .replace('</emphasis>', '*')
            value = value.strip()
            self.entry[self.header[col]] = value
            col += 1
        self.req.append(self.entry)
        #print("append", self.entry)
        self.entry = {}

    def depart_table(self, node: docutils.nodes.Node) -> None:
        """Called when leaving a table."""
        pass

    def unknown_visit(self, node: docutils.nodes.Node) -> None:
        """Called for all other node types."""
        pass

    def unknown_departure(self, node: docutils.nodes.Node) -> None:
        """Called for all other node types."""
        pass

def parse_rst(text: str) -> docutils.nodes.document:
    parser = docutils.parsers.rst.Parser()
    components = (docutils.parsers.rst.Parser,)
    settings = docutils.frontend.OptionParser(components=components).get_default_values()
    document = docutils.utils.new_document('<rst-doc>', settings=settings)
    parser.parse(text, document)
    return document

def main():
    requirements = []
    for filepath in sorted(glob.glob('kapitler/0*.rst')):
        #print("Processing %s" % filepath)
        with open(filepath) as fh:
            content = fh.read()
            doc = parse_rst(content)
            visitor = RstVisitor(doc)
            visitor.req = requirements
            doc.walkabout(visitor)
            requirements = visitor.req
    print(json.dumps(requirements, indent=4))
    return 0

if __name__ == '__main__':
    exit(main())
